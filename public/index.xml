<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>YIFEI&#39;Log</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on YIFEI&#39;Log</description>
    <image>
      <title>YIFEI&#39;Log</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.125.4</generator>
    <language>en</language>
    <lastBuildDate>Sun, 28 Apr 2024 22:32:28 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Github Pages&#43;Hugo搭建个人博客</title>
      <link>http://localhost:1313/posts/tutorial/github-hugo-papermod/deploy_blog/</link>
      <pubDate>Sun, 28 Apr 2024 22:32:28 +0800</pubDate>
      <guid>http://localhost:1313/posts/tutorial/github-hugo-papermod/deploy_blog/</guid>
      <description>搭建个人博客有多种方式，可以自己申请域名搭服务器建站，但如果只是简单记录一些论文笔记以及技术分享，github静态页面托管的方式搭建博客可能是更为经济的方式，因为github完全免费~ github也有多种搭建博客的框架可选，如jkelly、hexo等。本篇博客借鉴Lil&amp;rsquo;Log的个人博客风格，使用Hugo搭建博客，并使用PaperMod主题，使用Github Actions进行博客的编译、发布。
参考：https://www.elegantcrazy.com/posts/blog/build-blog-with-github-pages-hugo-and-papermod/
环境搭建 Hugo Git VSCode（当做markdown编辑器使用） 创建网站 hugo创建项目
hugo new site hugo-blog cd hugo-blog hugo new site创建的项目默认配置文件为toml格式，虽然不影响使用，但不易读和维护。yaml是一种更易读的配置文件，且PaperMod主题的样例配置文件也为yaml格式，我们直接把toml文件改为yaml文件
配置主题 安装主题 主题使用PaperMod，安装PaperMod主题
git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 启用主题 这里参考PaperMod官方的样例配置文件config.yaml，下面只是当前版本，尽可能从上面官方链接获取最新版本。
baseURL: &amp;#34;https://examplesite.com/&amp;#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: &amp;#34;ExampleSite description&amp;#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [&amp;#34;Me&amp;#34;, &amp;#34;You&amp;#34;] # multiple authors images: [&amp;#34;&amp;lt;link or path of image for opengraph, twitter-cards&amp;gt;&amp;#34;] DateFormat: &amp;#34;January 2, 2006&amp;#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.</description>
    </item>
    <item>
      <title>image-restoration-SUPIR</title>
      <link>http://localhost:1313/posts/imagerestoration/supir/</link>
      <pubDate>Sun, 28 Apr 2024 22:24:02 +0800</pubDate>
      <guid>http://localhost:1313/posts/imagerestoration/supir/</guid>
      <description>这篇记录supir论文笔记，supir超清超分效果拔群，且风光动物类图像保真程度非常好</description>
    </item>
    <item>
      <title>quantization-stablediffusion(aimet)</title>
      <link>http://localhost:1313/posts/quantization/sd_series/sd/</link>
      <pubDate>Sun, 28 Apr 2024 22:17:18 +0800</pubDate>
      <guid>http://localhost:1313/posts/quantization/sd_series/sd/</guid>
      <description>这篇blog记录sd pipeline的量化，借助aimet</description>
    </item>
    <item>
      <title>quantization-framework-aimet</title>
      <link>http://localhost:1313/posts/quantization/aimet/aimet/</link>
      <pubDate>Sun, 28 Apr 2024 22:15:37 +0800</pubDate>
      <guid>http://localhost:1313/posts/quantization/aimet/aimet/</guid>
      <description>这篇blog开坑解析aimet量化流程，以及aimet内部源码的解析
量化基础 QuantSim 代码解析 QuantizationSimModel
class QuantizationSimModel: def __init__(self, model: torch.nn.Module, dummy_input: Union[torch.Tensor, Tuple], quant_scheme: Union[str, QuantScheme] = QuantScheme.post_training_tf_enhanced, rounding_mode: str = &amp;#39;nearest&amp;#39;, default_output_bw: int = 8, default_param_bw: int = 8, in_place: bool = False, config_file: str = None, default_data_type: QuantizationDataType = QuantizationDataType.int): &amp;#34;&amp;#34;&amp;#34; Constructor for QuantizationSimModel. :param model: Model to add simulation ops to :param dummy_input: Dummy input to the model. Used to parse model graph. If the model has more than one input, pass a tuple.</description>
    </item>
    <item>
      <title>quantization-base</title>
      <link>http://localhost:1313/posts/quantization/base/base/</link>
      <pubDate>Sun, 28 Apr 2024 22:15:05 +0800</pubDate>
      <guid>http://localhost:1313/posts/quantization/base/base/</guid>
      <description>这篇blog开坑记录量化的一些基础知识，依据资料主要是高通的量化白皮书</description>
    </item>
  </channel>
</rss>
